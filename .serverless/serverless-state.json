{
  "service": {
    "service": "serverless-reality-tv-voting",
    "serviceObject": {
      "name": "serverless-reality-tv-voting"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "architecture": "arm64",
      "memorySize": 128,
      "timeout": 30,
      "environment": {
        "DYNAMODB_ENDPOINT": "https://dynamodb.us-east-1.amazonaws.com",
        "DYNAMODB_TABLE_USERS": "dev-users",
        "DYNAMODB_TABLE_PARTICIPANTS": "dev-participants",
        "API_ZIPCODE_VIACEP_ENDPOINT": "https://viacep.com.br/ws"
      },
      "httpApi": {
        "cors": true
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Resource": "arn:aws:dynamodb:us-east-1:*:table/dev-users"
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Resource": "arn:aws:dynamodb:us-east-1:*:table/dev-participants"
            }
          ]
        }
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "UsersDashcreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-reality-tv-voting-dev-users-create"
            }
          },
          "UsersDashupdateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-reality-tv-voting-dev-users-update"
            }
          },
          "UsersDashgetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-reality-tv-voting-dev-users-get"
            }
          },
          "UsersDashdeleteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-reality-tv-voting-dev-users-delete"
            }
          },
          "UsersDashlistLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-reality-tv-voting-dev-users-list"
            }
          },
          "ParticipantsDashcreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-reality-tv-voting-dev-participants-create"
            }
          },
          "ParticipantsDashupdateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-reality-tv-voting-dev-participants-update"
            }
          },
          "ParticipantsDashgetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-reality-tv-voting-dev-participants-get"
            }
          },
          "ParticipantsDashdeleteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-reality-tv-voting-dev-participants-delete"
            }
          },
          "ParticipantsDashlistLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-reality-tv-voting-dev-participants-list"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-reality-tv-voting",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-reality-tv-voting-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-reality-tv-voting-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][1]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-reality-tv-voting",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
              ]
            }
          },
          "UsersDashcreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-reality-tv-voting/dev/1678026670856-2023-03-05T14:31:10.856Z/serverless-reality-tv-voting.zip"
              },
              "Handler": "src/lambdas/users/create.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-reality-tv-voting-dev-users-create",
              "MemorySize": 128,
              "Timeout": 30,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DYNAMODB_ENDPOINT": "https://dynamodb.us-east-1.amazonaws.com",
                  "DYNAMODB_TABLE_USERS": "dev-users",
                  "DYNAMODB_TABLE_PARTICIPANTS": "dev-participants",
                  "API_ZIPCODE_VIACEP_ENDPOINT": "https://viacep.com.br/ws"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension-Arm64:2"
              ]
            },
            "DependsOn": [
              "UsersDashcreateLogGroup"
            ]
          },
          "UsersDashupdateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-reality-tv-voting/dev/1678026670856-2023-03-05T14:31:10.856Z/serverless-reality-tv-voting.zip"
              },
              "Handler": "src/lambdas/users/update.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-reality-tv-voting-dev-users-update",
              "MemorySize": 128,
              "Timeout": 30,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DYNAMODB_ENDPOINT": "https://dynamodb.us-east-1.amazonaws.com",
                  "DYNAMODB_TABLE_USERS": "dev-users",
                  "DYNAMODB_TABLE_PARTICIPANTS": "dev-participants",
                  "API_ZIPCODE_VIACEP_ENDPOINT": "https://viacep.com.br/ws"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension-Arm64:2"
              ]
            },
            "DependsOn": [
              "UsersDashupdateLogGroup"
            ]
          },
          "UsersDashgetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-reality-tv-voting/dev/1678026670856-2023-03-05T14:31:10.856Z/serverless-reality-tv-voting.zip"
              },
              "Handler": "src/lambdas/users/get.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-reality-tv-voting-dev-users-get",
              "MemorySize": 128,
              "Timeout": 30,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DYNAMODB_ENDPOINT": "https://dynamodb.us-east-1.amazonaws.com",
                  "DYNAMODB_TABLE_USERS": "dev-users",
                  "DYNAMODB_TABLE_PARTICIPANTS": "dev-participants",
                  "API_ZIPCODE_VIACEP_ENDPOINT": "https://viacep.com.br/ws"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension-Arm64:2"
              ]
            },
            "DependsOn": [
              "UsersDashgetLogGroup"
            ]
          },
          "UsersDashdeleteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-reality-tv-voting/dev/1678026670856-2023-03-05T14:31:10.856Z/serverless-reality-tv-voting.zip"
              },
              "Handler": "src/lambdas/users/delete.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-reality-tv-voting-dev-users-delete",
              "MemorySize": 128,
              "Timeout": 30,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DYNAMODB_ENDPOINT": "https://dynamodb.us-east-1.amazonaws.com",
                  "DYNAMODB_TABLE_USERS": "dev-users",
                  "DYNAMODB_TABLE_PARTICIPANTS": "dev-participants",
                  "API_ZIPCODE_VIACEP_ENDPOINT": "https://viacep.com.br/ws"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension-Arm64:2"
              ]
            },
            "DependsOn": [
              "UsersDashdeleteLogGroup"
            ]
          },
          "UsersDashlistLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-reality-tv-voting/dev/1678026670856-2023-03-05T14:31:10.856Z/serverless-reality-tv-voting.zip"
              },
              "Handler": "src/lambdas/users/list.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-reality-tv-voting-dev-users-list",
              "MemorySize": 128,
              "Timeout": 30,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DYNAMODB_ENDPOINT": "https://dynamodb.us-east-1.amazonaws.com",
                  "DYNAMODB_TABLE_USERS": "dev-users",
                  "DYNAMODB_TABLE_PARTICIPANTS": "dev-participants",
                  "API_ZIPCODE_VIACEP_ENDPOINT": "https://viacep.com.br/ws"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension-Arm64:2"
              ]
            },
            "DependsOn": [
              "UsersDashlistLogGroup"
            ]
          },
          "ParticipantsDashcreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-reality-tv-voting/dev/1678026670856-2023-03-05T14:31:10.856Z/serverless-reality-tv-voting.zip"
              },
              "Handler": "src/lambdas/participants/create.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-reality-tv-voting-dev-participants-create",
              "MemorySize": 128,
              "Timeout": 30,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DYNAMODB_ENDPOINT": "https://dynamodb.us-east-1.amazonaws.com",
                  "DYNAMODB_TABLE_USERS": "dev-users",
                  "DYNAMODB_TABLE_PARTICIPANTS": "dev-participants",
                  "API_ZIPCODE_VIACEP_ENDPOINT": "https://viacep.com.br/ws"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension-Arm64:2"
              ]
            },
            "DependsOn": [
              "ParticipantsDashcreateLogGroup"
            ]
          },
          "ParticipantsDashupdateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-reality-tv-voting/dev/1678026670856-2023-03-05T14:31:10.856Z/serverless-reality-tv-voting.zip"
              },
              "Handler": "src/lambdas/participants/update.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-reality-tv-voting-dev-participants-update",
              "MemorySize": 128,
              "Timeout": 30,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DYNAMODB_ENDPOINT": "https://dynamodb.us-east-1.amazonaws.com",
                  "DYNAMODB_TABLE_USERS": "dev-users",
                  "DYNAMODB_TABLE_PARTICIPANTS": "dev-participants",
                  "API_ZIPCODE_VIACEP_ENDPOINT": "https://viacep.com.br/ws"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension-Arm64:2"
              ]
            },
            "DependsOn": [
              "ParticipantsDashupdateLogGroup"
            ]
          },
          "ParticipantsDashgetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-reality-tv-voting/dev/1678026670856-2023-03-05T14:31:10.856Z/serverless-reality-tv-voting.zip"
              },
              "Handler": "src/lambdas/participants/get.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-reality-tv-voting-dev-participants-get",
              "MemorySize": 128,
              "Timeout": 30,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DYNAMODB_ENDPOINT": "https://dynamodb.us-east-1.amazonaws.com",
                  "DYNAMODB_TABLE_USERS": "dev-users",
                  "DYNAMODB_TABLE_PARTICIPANTS": "dev-participants",
                  "API_ZIPCODE_VIACEP_ENDPOINT": "https://viacep.com.br/ws"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension-Arm64:2"
              ]
            },
            "DependsOn": [
              "ParticipantsDashgetLogGroup"
            ]
          },
          "ParticipantsDashdeleteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-reality-tv-voting/dev/1678026670856-2023-03-05T14:31:10.856Z/serverless-reality-tv-voting.zip"
              },
              "Handler": "src/lambdas/participants/delete.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-reality-tv-voting-dev-participants-delete",
              "MemorySize": 128,
              "Timeout": 30,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DYNAMODB_ENDPOINT": "https://dynamodb.us-east-1.amazonaws.com",
                  "DYNAMODB_TABLE_USERS": "dev-users",
                  "DYNAMODB_TABLE_PARTICIPANTS": "dev-participants",
                  "API_ZIPCODE_VIACEP_ENDPOINT": "https://viacep.com.br/ws"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension-Arm64:2"
              ]
            },
            "DependsOn": [
              "ParticipantsDashdeleteLogGroup"
            ]
          },
          "ParticipantsDashlistLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/serverless-reality-tv-voting/dev/1678026670856-2023-03-05T14:31:10.856Z/serverless-reality-tv-voting.zip"
              },
              "Handler": "src/lambdas/participants/list.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "serverless-reality-tv-voting-dev-participants-list",
              "MemorySize": 128,
              "Timeout": 30,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DYNAMODB_ENDPOINT": "https://dynamodb.us-east-1.amazonaws.com",
                  "DYNAMODB_TABLE_USERS": "dev-users",
                  "DYNAMODB_TABLE_PARTICIPANTS": "dev-participants",
                  "API_ZIPCODE_VIACEP_ENDPOINT": "https://viacep.com.br/ws"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:580247275435:layer:LambdaInsightsExtension-Arm64:2"
              ]
            },
            "DependsOn": [
              "ParticipantsDashlistLogGroup"
            ]
          },
          "UsersDashcreateLambdaVersionfNPSiRaU5H6UWblxWTA9ztW44Dghe8O9ggUYId6y6I": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UsersDashcreateLambdaFunction"
              },
              "CodeSha256": "vEbeiWBq12voWdkmIIBnInGavH41ljwfBZgbm0VZfHM="
            }
          },
          "UsersDashupdateLambdaVersionX4DDC0LrfqHtLxkHMcljPsmdOip7NVlNhA16aPjDqFM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UsersDashupdateLambdaFunction"
              },
              "CodeSha256": "vEbeiWBq12voWdkmIIBnInGavH41ljwfBZgbm0VZfHM="
            }
          },
          "UsersDashgetLambdaVersionG1oYTDGaeWzNX0rT6bwDggVt9lxMGLp4a0jH19gMqsA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UsersDashgetLambdaFunction"
              },
              "CodeSha256": "vEbeiWBq12voWdkmIIBnInGavH41ljwfBZgbm0VZfHM="
            }
          },
          "UsersDashdeleteLambdaVersionWTtWsnooPcyR3cSVPnabQTwqErLOi9gwYHuP2c1Yg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UsersDashdeleteLambdaFunction"
              },
              "CodeSha256": "vEbeiWBq12voWdkmIIBnInGavH41ljwfBZgbm0VZfHM="
            }
          },
          "UsersDashlistLambdaVersionKk8QqkfUDpWknhvLIPqtAxgyWx2qt4HDCVW55x2nFuU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UsersDashlistLambdaFunction"
              },
              "CodeSha256": "vEbeiWBq12voWdkmIIBnInGavH41ljwfBZgbm0VZfHM="
            }
          },
          "ParticipantsDashcreateLambdaVersion4CS44F3oDuGtDMYdvlLAIP5PcK1yo064bzrsYA0I2k": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ParticipantsDashcreateLambdaFunction"
              },
              "CodeSha256": "vEbeiWBq12voWdkmIIBnInGavH41ljwfBZgbm0VZfHM="
            }
          },
          "ParticipantsDashupdateLambdaVersionuSd9bIhIfPW1iPtPGzyY9DfAU6HRCjuZJQ9odEGK6wE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ParticipantsDashupdateLambdaFunction"
              },
              "CodeSha256": "vEbeiWBq12voWdkmIIBnInGavH41ljwfBZgbm0VZfHM="
            }
          },
          "ParticipantsDashgetLambdaVersion6VbztDyaDLDSR9UsQb24KMbiJoQG5QaeRnjWgcvN0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ParticipantsDashgetLambdaFunction"
              },
              "CodeSha256": "vEbeiWBq12voWdkmIIBnInGavH41ljwfBZgbm0VZfHM="
            }
          },
          "ParticipantsDashdeleteLambdaVersion1kOlqspBwi1KEuI3GVDpZswaHPufK9t2HlIrOFE7E": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ParticipantsDashdeleteLambdaFunction"
              },
              "CodeSha256": "vEbeiWBq12voWdkmIIBnInGavH41ljwfBZgbm0VZfHM="
            }
          },
          "ParticipantsDashlistLambdaVersion0y0GLZGbCIoNrVyskenkE7gVprG3LAjLF6rbC9UDsY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ParticipantsDashlistLambdaFunction"
              },
              "CodeSha256": "vEbeiWBq12voWdkmIIBnInGavH41ljwfBZgbm0VZfHM="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-serverless-reality-tv-voting",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceUsers": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "users",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUsersDocumentnumberVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUsers"
              },
              "PathPart": "{documentNumber}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceParticipants": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "participants",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceParticipantsCodeVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceParticipants"
              },
              "PathPart": "{code}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUsersPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsers"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UsersDashcreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UsersDashcreateLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUsersDocumentnumberVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsersDocumentnumberVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UsersDashupdateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UsersDashupdateLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUsersDocumentnumberVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsersDocumentnumberVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UsersDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UsersDashgetLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUsersDocumentnumberVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsersDocumentnumberVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UsersDashdeleteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UsersDashdeleteLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUsersGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsers"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UsersDashlistLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UsersDashlistLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodParticipantsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceParticipants"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ParticipantsDashcreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ParticipantsDashcreateLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodParticipantsCodeVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceParticipantsCodeVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ParticipantsDashupdateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ParticipantsDashupdateLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodParticipantsCodeVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceParticipantsCodeVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ParticipantsDashgetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ParticipantsDashgetLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodParticipantsCodeVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceParticipantsCodeVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ParticipantsDashdeleteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ParticipantsDashdeleteLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodParticipantsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceParticipants"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ParticipantsDashlistLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ParticipantsDashlistLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1678026666582": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodUsersPost",
              "ApiGatewayMethodUsersDocumentnumberVarPut",
              "ApiGatewayMethodUsersDocumentnumberVarGet",
              "ApiGatewayMethodUsersDocumentnumberVarDelete",
              "ApiGatewayMethodUsersGet",
              "ApiGatewayMethodParticipantsPost",
              "ApiGatewayMethodParticipantsCodeVarPut",
              "ApiGatewayMethodParticipantsCodeVarGet",
              "ApiGatewayMethodParticipantsCodeVarDelete",
              "ApiGatewayMethodParticipantsGet"
            ]
          },
          "UsersDashcreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UsersDashcreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UsersDashupdateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UsersDashupdateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UsersDashgetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UsersDashgetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UsersDashdeleteLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UsersDashdeleteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UsersDashlistLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UsersDashlistLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ParticipantsDashcreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ParticipantsDashcreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ParticipantsDashupdateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ParticipantsDashupdateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ParticipantsDashgetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ParticipantsDashgetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ParticipantsDashdeleteLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ParticipantsDashdeleteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ParticipantsDashlistLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ParticipantsDashlistLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UsersDynamoDbTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "documentNumber",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "documentNumber",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "TableName": "dev-users"
            }
          },
          "ParticipantsDynamoDbTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "code",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "code",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "TableName": "dev-participants"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-serverless-reality-tv-voting-dev-ServerlessDeploymentBucketName"
            }
          },
          "UsersDashcreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UsersDashcreateLambdaVersionfNPSiRaU5H6UWblxWTA9ztW44Dghe8O9ggUYId6y6I"
            },
            "Export": {
              "Name": "sls-serverless-reality-tv-voting-dev-UsersDashcreateLambdaFunctionQualifiedArn"
            }
          },
          "UsersDashupdateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UsersDashupdateLambdaVersionX4DDC0LrfqHtLxkHMcljPsmdOip7NVlNhA16aPjDqFM"
            },
            "Export": {
              "Name": "sls-serverless-reality-tv-voting-dev-UsersDashupdateLambdaFunctionQualifiedArn"
            }
          },
          "UsersDashgetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UsersDashgetLambdaVersionG1oYTDGaeWzNX0rT6bwDggVt9lxMGLp4a0jH19gMqsA"
            },
            "Export": {
              "Name": "sls-serverless-reality-tv-voting-dev-UsersDashgetLambdaFunctionQualifiedArn"
            }
          },
          "UsersDashdeleteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UsersDashdeleteLambdaVersionWTtWsnooPcyR3cSVPnabQTwqErLOi9gwYHuP2c1Yg"
            },
            "Export": {
              "Name": "sls-serverless-reality-tv-voting-dev-UsersDashdeleteLambdaFunctionQualifiedArn"
            }
          },
          "UsersDashlistLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UsersDashlistLambdaVersionKk8QqkfUDpWknhvLIPqtAxgyWx2qt4HDCVW55x2nFuU"
            },
            "Export": {
              "Name": "sls-serverless-reality-tv-voting-dev-UsersDashlistLambdaFunctionQualifiedArn"
            }
          },
          "ParticipantsDashcreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ParticipantsDashcreateLambdaVersion4CS44F3oDuGtDMYdvlLAIP5PcK1yo064bzrsYA0I2k"
            },
            "Export": {
              "Name": "sls-serverless-reality-tv-voting-dev-ParticipantsDashcreateLambdaFunctionQualifiedArn"
            }
          },
          "ParticipantsDashupdateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ParticipantsDashupdateLambdaVersionuSd9bIhIfPW1iPtPGzyY9DfAU6HRCjuZJQ9odEGK6wE"
            },
            "Export": {
              "Name": "sls-serverless-reality-tv-voting-dev-ParticipantsDashupdateLambdaFunctionQualifiedArn"
            }
          },
          "ParticipantsDashgetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ParticipantsDashgetLambdaVersion6VbztDyaDLDSR9UsQb24KMbiJoQG5QaeRnjWgcvN0"
            },
            "Export": {
              "Name": "sls-serverless-reality-tv-voting-dev-ParticipantsDashgetLambdaFunctionQualifiedArn"
            }
          },
          "ParticipantsDashdeleteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ParticipantsDashdeleteLambdaVersion1kOlqspBwi1KEuI3GVDpZswaHPufK9t2HlIrOFE7E"
            },
            "Export": {
              "Name": "sls-serverless-reality-tv-voting-dev-ParticipantsDashdeleteLambdaFunctionQualifiedArn"
            }
          },
          "ParticipantsDashlistLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ParticipantsDashlistLambdaVersion0y0GLZGbCIoNrVyskenkE7gVprG3LAjLF6rbC9UDsY"
            },
            "Export": {
              "Name": "sls-serverless-reality-tv-voting-dev-ParticipantsDashlistLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-serverless-reality-tv-voting-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "iamManagedPolicies": [
        "arn:aws:iam::aws:policy/CloudWatchLambdaInsightsExecutionRolePolicy"
      ],
      "vpc": {}
    },
    "plugins": [
      "serverless-prune-plugin",
      "serverless-plugin-lambda-insights",
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "users-create": {
        "handler": "src/lambdas/users/create.handler",
        "lambdaInsights": true,
        "events": [
          {
            "http": {
              "path": "users",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-reality-tv-voting-dev-users-create",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UsersDashcreateLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {},
        "memory": 128,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "UsersDashcreateLambdaVersionfNPSiRaU5H6UWblxWTA9ztW44Dghe8O9ggUYId6y6I"
      },
      "users-update": {
        "handler": "src/lambdas/users/update.handler",
        "lambdaInsights": true,
        "events": [
          {
            "http": {
              "path": "users/{documentNumber}",
              "method": "put",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-reality-tv-voting-dev-users-update",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UsersDashupdateLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {},
        "memory": 128,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "UsersDashupdateLambdaVersionX4DDC0LrfqHtLxkHMcljPsmdOip7NVlNhA16aPjDqFM"
      },
      "users-get": {
        "handler": "src/lambdas/users/get.handler",
        "lambdaInsights": true,
        "events": [
          {
            "http": {
              "path": "users/{documentNumber}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-reality-tv-voting-dev-users-get",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UsersDashgetLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {},
        "memory": 128,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "UsersDashgetLambdaVersionG1oYTDGaeWzNX0rT6bwDggVt9lxMGLp4a0jH19gMqsA"
      },
      "users-delete": {
        "handler": "src/lambdas/users/delete.handler",
        "lambdaInsights": true,
        "events": [
          {
            "http": {
              "path": "users/{documentNumber}",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-reality-tv-voting-dev-users-delete",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UsersDashdeleteLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {},
        "memory": 128,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "UsersDashdeleteLambdaVersionWTtWsnooPcyR3cSVPnabQTwqErLOi9gwYHuP2c1Yg"
      },
      "users-list": {
        "handler": "src/lambdas/users/list.handler",
        "lambdaInsights": true,
        "events": [
          {
            "http": {
              "path": "users",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-reality-tv-voting-dev-users-list",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"UsersDashlistLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {},
        "memory": 128,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "UsersDashlistLambdaVersionKk8QqkfUDpWknhvLIPqtAxgyWx2qt4HDCVW55x2nFuU"
      },
      "participants-create": {
        "handler": "src/lambdas/participants/create.handler",
        "lambdaInsights": true,
        "events": [
          {
            "http": {
              "path": "participants",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-reality-tv-voting-dev-participants-create",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ParticipantsDashcreateLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {},
        "memory": 128,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ParticipantsDashcreateLambdaVersion4CS44F3oDuGtDMYdvlLAIP5PcK1yo064bzrsYA0I2k"
      },
      "participants-update": {
        "handler": "src/lambdas/participants/update.handler",
        "lambdaInsights": true,
        "events": [
          {
            "http": {
              "path": "participants/{code}",
              "method": "put",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-reality-tv-voting-dev-participants-update",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ParticipantsDashupdateLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {},
        "memory": 128,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ParticipantsDashupdateLambdaVersionuSd9bIhIfPW1iPtPGzyY9DfAU6HRCjuZJQ9odEGK6wE"
      },
      "participants-get": {
        "handler": "src/lambdas/participants/get.handler",
        "lambdaInsights": true,
        "events": [
          {
            "http": {
              "path": "participants/{code}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-reality-tv-voting-dev-participants-get",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ParticipantsDashgetLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {},
        "memory": 128,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ParticipantsDashgetLambdaVersion6VbztDyaDLDSR9UsQb24KMbiJoQG5QaeRnjWgcvN0"
      },
      "participants-delete": {
        "handler": "src/lambdas/participants/delete.handler",
        "lambdaInsights": true,
        "events": [
          {
            "http": {
              "path": "participants/{code}",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-reality-tv-voting-dev-participants-delete",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ParticipantsDashdeleteLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {},
        "memory": 128,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ParticipantsDashdeleteLambdaVersion1kOlqspBwi1KEuI3GVDpZswaHPufK9t2HlIrOFE7E"
      },
      "participants-list": {
        "handler": "src/lambdas/participants/list.handler",
        "lambdaInsights": true,
        "events": [
          {
            "http": {
              "path": "participants",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-reality-tv-voting-dev-participants-list",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ParticipantsDashlistLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "package": {},
        "memory": 128,
        "timeout": 30,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "ParticipantsDashlistLambdaVersion0y0GLZGbCIoNrVyskenkE7gVprG3LAjLF6rbC9UDsY"
      }
    },
    "resources": {
      "Resources": {
        "UsersDynamoDbTable": {
          "Type": "AWS::DynamoDB::Table",
          "DeletionPolicy": "Retain",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "documentNumber",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "documentNumber",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "TableName": "dev-users"
          }
        },
        "ParticipantsDynamoDbTable": {
          "Type": "AWS::DynamoDB::Table",
          "DeletionPolicy": "Retain",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "code",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "code",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "TableName": "dev-participants"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "serverless-reality-tv-voting",
      "frameworkVersion": "3",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/Luciano.Junior/Projects/tcc/serverless-reality-tv-voting/.serverless/serverless-reality-tv-voting.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/serverless-reality-tv-voting/dev/1678026670856-2023-03-05T14:31:10.856Z",
    "artifact": "serverless-reality-tv-voting.zip"
  }
}